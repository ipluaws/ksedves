name: spa-deploy-dynamic

on:
  push:
    paths:
      - 'spa/**'
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Initialize Terraform
      run: terraform init

    - name: Get Terraform Outputs
      id: terraform-outputs
      run: |
        terraform output -json > outputs.json

    - name: Parse Terraform Outputs
      id: parse-outputs
      run: |
        S3_BUCKET_NAME=$(jq -r .s3_bucket_name.value outputs.json)
        CLOUDFRONT_DISTRIBUTION_ID=$(jq -r .cloudfront_distribution_id.value outputs.json)
        echo "S3_BUCKET_NAME=${S3_BUCKET_NAME}" >> $GITHUB_ENV
        echo "CLOUDFRONT_DISTRIBUTION_ID=${CLOUDFRONT_DISTRIBUTION_ID}" >> $GITHUB_ENV

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build the app
      run: npm run build

    - name: Upload to S3
      run: |
        aws s3 sync build/ s3://$S3_BUCKET_NAME --delete
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
